# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.PubSub.V1.Model.SeekRequest do
  @moduledoc """
  Request for the `Seek` method.

  ## Attributes

  *   `snapshot` (*type:* `String.t`, *default:* `nil`) - The snapshot to seek to. The snapshot's topic must be the same as that of the provided subscription. Format is `projects/{project}/snapshots/{snap}`.
  *   `time` (*type:* `DateTime.t`, *default:* `nil`) - The time to seek to. Messages retained in the subscription that were published before this time are marked as acknowledged, and messages retained in the subscription that were published after this time are marked as unacknowledged. Note that this operation affects only those messages retained in the subscription (configured by the combination of `message_retention_duration` and `retain_acked_messages`). For example, if `time` corresponds to a point before the message retention window (or to a point before the system's notion of the subscription creation time), only retained messages will be marked as unacknowledged, and already-expunged messages will not be restored.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :snapshot => String.t() | nil,
          :time => DateTime.t() | nil
        }

  field(:snapshot)
  field(:time, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.PubSub.V1.Model.SeekRequest do
  def decode(value, options) do
    GoogleApi.PubSub.V1.Model.SeekRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.PubSub.V1.Model.SeekRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
